# flake8: noqa
# Generated by Django 3.2.3 on 2023-09-19 08:15

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text="Логин должен быть уникальным не более 150 символов, и может состоять из букв, цифр и следующих символов: [\\w.@+-]. Не допустимо использовать ('me',) в качестве логина.", max_length=150, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(blank=True, help_text='Имя пользователя должно быть не более 150 символов', max_length=150, verbose_name='Имя пользователя')),
                ('last_name', models.CharField(blank=True, help_text='Фамилия пользователя должна быть не более 150 символов', max_length=150, verbose_name='Фамилия пользователя')),
                ('email', models.EmailField(help_text='E-mail должен быть уникальным не более 254 символов', max_length=254, unique=True, verbose_name='Адрес электронной почты')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User'), ('guest', 'Guest')], default='user', help_text='Выберите роль для пользователя', max_length=5, verbose_name='Роль пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('last_name', 'first_name', 'username'),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
